{"ts":1366907212547,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"require 'fantasynamegenerator.rb'\r\n\r\n# simple echo provider \r\ndescribe Provider do\r\n    \r\n    before do\r\n        @provider = Provider.new\r\n    end\r\n\r\n    it \"Should echo content when array\" do\r\n        @provider.content_for([\"1\", \"2\"], \"3\").should == \"1-2-3\"\r\n    end\r\n    \r\n    it \"Should echo content when string\" do\r\n        @provider.content_for(\"12\", \"3\").should == \"12-3\"\r\n    end\r\n\r\n    it \"Should echo content when array of numbers\" do\r\n        @provider.content_for([1, 2], \"3\").should == \"1-2-3\"\r\n    end\r\n\r\nend\r\n"]],"start1":0,"start2":0,"length1":0,"length2":523}]],"length":523}
{"contributors":[],"silentsave":false,"ts":1366907205118,"patch":[[{"diffs":[[0,"escribe "],[1,"Yaml"],[0,"Provider"]],"start1":63,"start2":63,"length1":16,"length2":20}]],"length":527,"saved":false}
{"ts":1366907214879,"patch":[[{"diffs":[[0,"\r\n# "],[-1,"simple echo"],[1,"yaml based"],[0," pro"]],"start1":35,"start2":35,"length1":19,"length2":18}]],"length":526,"saved":false}
{"ts":1366907217322,"patch":[[{"diffs":[[0,"vider = "],[1,"Yaml"],[0,"Provider"]],"start1":120,"start2":120,"length1":16,"length2":20}]],"length":530,"saved":false}
{"ts":1366907219132,"patch":[[{"diffs":[[0,"ider.new"],[1,"()"],[0,"\r\n    en"]],"start1":136,"start2":136,"length1":16,"length2":18}]],"length":532,"saved":false}
{"ts":1366907225530,"patch":[[{"diffs":[[0,"der.new("],[1,"''"],[0,")\r\n    e"]],"start1":137,"start2":137,"length1":16,"length2":18}]],"length":534,"saved":false}
{"ts":1366907242645,"patch":[[{"diffs":[[0," before do\r\n"],[1,"        data = IO.read('example_template.yaml')   \r\n"],[0,"        @pro"]],"start1":96,"start2":96,"length1":24,"length2":76}]],"length":586,"saved":false}
{"ts":1366907247549,"patch":[[{"diffs":[[0,"new("],[-1,"''"],[1,"data"],[0,")\r\n "]],"start1":193,"start2":193,"length1":10,"length2":12}]],"length":588,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366971391279,"patch":[[{"diffs":[[0,"escribe "],[1,"Yaml"],[0,"Provider"]],"start1":62,"start2":62,"length1":16,"length2":20},{"diffs":[[0,"ple_"],[-1,"template"],[1,"data"],[0,".yam"]],"start1":136,"start2":136,"length1":16,"length2":12}]],"length":584,"saved":false}
{"contributors":[],"silentsave":false,"ts":1366992218552,"patch":[[{"diffs":[[0,"provider"],[-1," "],[1,"\r\n# due to nature of code this doesn't work with more than one\r\n# value for a given node so doesn't test sample call. meh."],[0,"\r\ndescri"]],"start1":50,"start2":50,"length1":17,"length2":138},{"diffs":[[0,"\"Should "],[-1,"echo content when array"],[1,"get from just name at top level\" do\r\n        @provider.content_for([], 'test').should == \"aaaa\"\r\n    end\r\n    \r\n    it \"Should get from one level deep"],[0,"\" do\r\n  "]],"start1":339,"start2":339,"length1":39,"length2":166},{"diffs":[[0,"or(["],[-1,"\"1\", \"2\"], \"3\""],[1,"'test'], 'Child1'"],[0,").sh"]],"start1":530,"start2":530,"length1":22,"length2":25},{"diffs":[[0,"d1').should == \""],[-1,"1-2-3"],[1,"gggg"],[0,"\"\r\n    end\r\n    "]],"start1":548,"start2":548,"length1":37,"length2":36},{"diffs":[[0,"uld "],[-1,"echo content when string"],[1,"get from two levels deep\" do\r\n        @provider.content_for(['test', 'Child3'], 'Child3Child2').should == \"oooo\"\r\n    end\r\n    \r\n    it \"Should get from just name at different level"],[0,"\" do"]],"start1":597,"start2":597,"length1":32,"length2":189},{"diffs":[[0,"for("],[-1,"\"12\", \"3\""],[1,"[], 'set 2'"],[0,").sh"]],"start1":814,"start2":814,"length1":17,"length2":19},{"diffs":[[0,"== \""],[-1,"12-3"],[1,"zzzz"],[0,"\"\r\n "]],"start1":838,"start2":838,"length1":12,"length2":12},{"diffs":[[0,"zzzz\"\r\n    end\r\n"],[1,"    "],[0,"\r\n    it \"Should"]],"start1":842,"start2":842,"length1":32,"length2":36},{"diffs":[[0,"uld "],[-1,"echo content when array of numbers"],[1,"match lower level path regardless of top level"],[0,"\" do"]],"start1":875,"start2":875,"length1":42,"length2":54},{"diffs":[[0,"or(["],[-1,"1, 2], \"3\""],[1,"'test'], 'set 2'"],[0,").sh"]],"start1":958,"start2":958,"length1":18,"length2":24},{"diffs":[[0,"== \""],[-1,"1-2-3"],[1,"zzzz"],[0,"\"\r\n "]],"start1":987,"start2":987,"length1":13,"length2":12},{"diffs":[[0,"   end\r\n"],[-1,"\r\n"],[0,"end\r\n"]],"start1":999,"start2":999,"length1":15,"length2":13}]],"length":1012,"saved":false}
{"ts":1366992408189,"patch":[[{"diffs":[[0,"   end\r\n"],[1,"    \r\nit \"Should match lower level path regardless of top level\" do\r\n        @provider.content_for(['test'], 'set 2').should == \"zzzz\"\r\n    end\r\n"],[0,"end\r\n"]],"start1":999,"start2":999,"length1":13,"length2":158}]],"length":1157,"saved":false}
{"ts":1366992429043,"patch":[[{"diffs":[[0,"ntent_for(['"],[-1,"test'], 'set 2"],[1,"set 2', 'test'], 'Child3"],[0,"').should =="]],"start1":1096,"start2":1096,"length1":38,"length2":48},{"diffs":[[0,"d3').should == \""],[-1,"zzzz"],[1,"rrrr"],[0,"\"\r\n    end\r\nend\r"]],"start1":1130,"start2":1130,"length1":36,"length2":36}]],"length":1167,"saved":false}
{"ts":1366992515561,"patch":[[{"diffs":[[0,"ad('"],[-1,"example"],[1,"test"],[0,"_dat"]],"start1":249,"start2":249,"length1":15,"length2":12}]],"length":1164,"saved":false}
{"ts":1366992546039,"patch":[[{"diffs":[[0,"\r\n    \r\n"],[1,"    "],[0,"it \"Shou"]],"start1":1002,"start2":1002,"length1":16,"length2":20}]],"length":1168,"saved":false}
